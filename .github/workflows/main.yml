name: CI

on:
  push:
    branches: [ main, feature/** ]
  pull_request:
    branches: [ main ]

env:
  COVERAGE: '0'
  # PHP SETTINGS
  PHP_EXTENSIONS: 'json'
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v1

jobs:
  checks-composer:
    name: Validate Composer
    runs-on: ubuntu-22.04
    timeout-minutes: 8
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup php extension cache environment
        if: ${{ vars.USE_PHP_EXTENSION_CACHE }}
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}-${{ matrix.php }}

      - name: Cache PHP extensions
        if: ${{ vars.USE_PHP_EXTENSION_CACHE }}
        uses: actions/cache@v4
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.31.1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer, composer-normalize:2.16.0

      - name: Set Composer Cache Directory
        if: ${{ vars.USE_COMPOSER_CACHE }}
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        if: ${{ vars.USE_COMPOSER_CACHE }}
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi

      - name: Run composer validate
        run: |
          composer validate --ansi

      - name: Run composer normalize
        run: |
          composer-normalize --dry-run --ansi

      - name: Run composer audit
        run: |
          composer audit --ansi

#  code-style-check:
#    runs-on: ubuntu-latest
#    timeout-minutes: 20
#    strategy:
#      matrix:
#        php:
#          - '7.4'
#      fail-fast: false
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@2.31.1
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: ${{ env.PHP_EXTENSIONS }}
#          ini-values: memory_limit=-1
#          coverage: none
#          tools: composer
#
#      - name: Set Composer Cache Directory
#        if: ${{ vars.USE_COMPOSER_CACHE }}
#        id: composer-cache
#        run: |
#          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
#
#      - name: Cache Composer dependencies
#        uses: actions/cache@v4
#        if: ${{ vars.USE_COMPOSER_CACHE }}
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-php-${{ matrix.php }}-composer-
#
#      - name: Install Composer dependencies
#        run: composer update --prefer-dist --no-progress --no-suggest --ansi
#
#      - name: Run PHP-CS-Fixer fix
#        run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --ansi

  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }}) - ${{ matrix.dependency-version }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      matrix:
        php:
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'
        include:
          - php: '7.4'
            coverage: false
        dependency-version: [prefer-lowest, prefer-stable]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@2.31.1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: pcov
          tools: composer

      - name: Set Composer Cache Directory
        if: ${{ vars.USE_COMPOSER_CACHE }}
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        if: ${{ vars.USE_COMPOSER_CACHE }}
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-progress --no-suggest --ansi

      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV

      - name: Run PHPUnit tests
        run: |
          mkdir -p reports/phpunit
          if [ "$COVERAGE" = '1' ]; then
            vendor/bin/phpunit --coverage-clover reports/phpunit/clover.xml --log-junit reports/phpunit/junit.xml --colors=always
          else
            vendor/bin/phpunit --colors=always
          fi

      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v4
        with:
          directory: ./reports/phpunit/
          name: phpunit-php${{ matrix.php }}
          flags: unit-test
          fail_ci_if_error: true
        continue-on-error: true

  docheader-check:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@2.31.1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer

      - name: Set Composer Cache Directory
        if: ${{ vars.USE_COMPOSER_CACHE }}
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        if: ${{ vars.USE_COMPOSER_CACHE }}
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: composer update --prefer-dist --no-progress --no-suggest --ansi

      - name: Run docheader check
        run: ./vendor/bin/docheader check src/
